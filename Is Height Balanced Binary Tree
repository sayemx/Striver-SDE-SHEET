Problem Link -> https://www.codingninjas.com/studio/problems/is-height-balanced-binary-tree_8230771?challengeSlug=striver-sde-challenge

import java.util.* ;
import java.io.*; 
/*************************************************************

Following is the Binary Tree node structure

class BinaryTreeNode<T> 
{
    T data;
    BinaryTreeNode<T> left;
    BinaryTreeNode<T> right;

    BinaryTreeNode(T data) {
        this.data = data;
        left = null;
        right = null;
    }
};

*************************************************************/
public class Solution {

	public static boolean isBalancedBT(BinaryTreeNode<Integer> root) {
		if(root == null) return true;
        if(isBalance(root) == -1){
            return false;
        }
        return true;
	}
    public static int isBalance(BinaryTreeNode<Integer> root){
        if(root == null) return 0;
        int left = isBalance(root.left);
        int right = isBalance(root.right);
        if(left == -1 || right == -1) return -1;
        if(Math.abs(left-right) > 1) return -1;

        return Math.max(left, right) + 1;
    }
}

Problem Link -> https://www.codingninjas.com/studio/problems/m-coloring-problem_8230777?challengeSlug=striver-sde-challenge

import java.util.* ;
import java.io.*; 
public class Solution {
	public static String graphColoring(int[][] mat, int m) {
		int n = mat.length;
		// ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
		// for(int i=0; i<n; i++){
		// 	adj.add(new ArrayList<>());
		// }
		// for(int i=0; i<n; i++){
		// 	for(int j=0; j<n; j++){
		// 		if(mat[i][j] == 1){
		// 			adj.get(i).add(j);
		// 			adj.get(j).add(i);
		// 		}
		// 	}
		// }
		// int color[] = new int[n];
		// Arrays.fill(color, -1);
		// if(check(mat, n, m, 0, color)) return "YES";
		// return "NO";
		int [] color= new int [n];
        
        if(dfs(mat, n, 0, color, m)){
            return "YES";
        }
        
        return "NO";
	}
	private static boolean dfs(int mat[][], int n, int node, int [] color, int m){
        
        if(node==n) return true;
        
        for(int i=1; i<=m; i++){
            if(isSafe(mat, n, node, color, i)){
                color[node]=i;
                if(dfs(mat, n, node+1, color, m)){
                    return true;
                }
                color[node]=0;
            }
        }
        return false;
    }
	private static boolean isSafe(int mat[][] , int n, int node, int [] color, int c){
        
        for(int i=0; i<n; i++){
            if(mat[node][i] == 1 && color[i]==c){
                return false;
            }
        }
        return true;
    }

}

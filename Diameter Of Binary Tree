Problem Link -> https://www.codingninjas.com/studio/problems/diameter-of-binary-tree_8230762?challengeSlug=striver-sde-challenge

/*************************************************************

Following is the Binary Tree Node structure:

    class TreeNode<T> {
		public T data;
		public BinaryTreeNode<T> left;
		public BinaryTreeNode<T> right;

		TreeNode(T data) {
			this.data = data;
			left = null;
			right = null;
	  	}
    }

*************************************************************/

public class Solution {
	public static int diameterOfBinaryTree(TreeNode<Integer> root) {
		if(root == null) return 0;
		int max[] = new int[1];
		max[0] = Integer.MIN_VALUE;
		diameterHeight(root, max);
		return max[0];
	}
	public static int diameterHeight(TreeNode<Integer> root, int []max){
		if(root == null) return 0;
		int left = diameterHeight(root.left, max);
		int right = diameterHeight(root.right, max);
		max[0] = Math.max(max[0], left + right);
		return Math.max(left, right) + 1;
	}
}

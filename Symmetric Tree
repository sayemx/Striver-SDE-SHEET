Problem Link -> https://www.codingninjas.com/studio/problems/symmetric-tree_8230686?challengeSlug=striver-sde-challenge

/*****************************************************************

    Following is the representation for the Binary Tree Node:

    class BinaryTreeNode<T> {
        T data;
        BinaryTreeNode<T> left;
        BinaryTreeNode<T> right;

        public BinaryTreeNode(T data) {
            this.data = data;
        }
    }

****************************************************************/

public class Solution {

    public static boolean isSymmetric(BinaryTreeNode<Integer> root) {
        if(root == null) return true;
        return checkSymmetric(root.left, root.right);
    }
    public static boolean checkSymmetric(BinaryTreeNode<Integer> root1, BinaryTreeNode<Integer> root2){
        if(root1 == null || root2 == null){
            return root1 == root2;
        }
        if(!root1.data.equals(root2.data)) return false;
        if(checkSymmetric(root1.left, root2.right) && checkSymmetric(root1.right, root2.left)){
            return true;
        }
        return false;
    }
}

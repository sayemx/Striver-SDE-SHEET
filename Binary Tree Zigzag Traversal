Problem Link -> https://www.codingninjas.com/studio/problems/binary-tree-zigzag-traversal_8230796?challengeSlug=striver-sde-challenge

import java.util.* ;
import java.io.*; 
/*
	Following is the class used to represent the object/node of the Binary Tree

	class BinaryTreeNode<T> {
	    T data;
	    BinaryTreeNode<T> left;
	    BinaryTreeNode<T> right;

	    public BinaryTreeNode(T data) {
	        this.data = data;
	    }
	}
*/

public class Solution {
	public static List<Integer> zigZagTraversal(BinaryTreeNode<Integer> root) {
		List<Integer> ans = new ArrayList<>();
		Queue<BinaryTreeNode> q = new ArrayDeque<>();
		if(root == null) return ans;
		q.offer(root);
		int level = 0;
		while(!q.isEmpty()){
			int size = q.size();
			List<Integer> tempList = new ArrayList<>();
			for(int i=0; i<size; i++){
				BinaryTreeNode<Integer> node = q.poll();
				tempList.add((int)node.data);
				if(node.left != null) q.offer(node.left);
				if(node.right != null) q.offer(node.right);
			}
			if(level % 2 != 0){
				Collections.reverse(tempList);
			}
			ans.addAll(tempList);
			level++;
		}
		return ans;
	}
}

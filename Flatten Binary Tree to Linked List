Problem Link -> https://www.codingninjas.com/studio/problems/flatten-binary-tree-to-linked-list_8230817?challengeSlug=striver-sde-challenge

import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure.

	class TreeNode<T> 
	{
	    public T data;
	    public TreeNode<T> left;
	    public TreeNode<T> right;

	    TreeNode(T data) 
	    {
	        this.data = data;
	        left = null;
	        right = null;
	    }
	}

************************************************************/

public class Solution 
{
    public static TreeNode<Integer> flattenBinaryTree(TreeNode<Integer> root)
    {
		TreeNode<Integer> prev[] = new TreeNode[1];
        flatten(root, prev);
		return root;
    }
	public static void flatten(TreeNode<Integer> root, TreeNode<Integer> prev[]){
		if(root == null) return;
		flatten(root.right, prev);
		flatten(root.left, prev);
		root.right = prev[0];
		prev[0] = root;
		root.left = null;
	}
}

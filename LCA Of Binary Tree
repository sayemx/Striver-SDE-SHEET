Problem Link -> https://www.codingninjas.com/studio/problems/lca-of-binary-tree_8230760?challengeSlug=striver-sde-challenge

import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T>
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/

public class Solution 
{
    public static int lowestCommonAncestor(TreeNode<Integer> root, int x, int y) 
    {
        return (int)lca(root, x, y).data;
    }
    public static TreeNode<Integer> lca(TreeNode<Integer> root, int x, int y){
        if(root == null) return null;
        if((int)root.data == x || (int)root.data == y){
            return root;
        }
        TreeNode<Integer> left = lca(root.left, x, y);
        TreeNode<Integer> right = lca(root.right, x, y);
        if(left != null && right != null) return root;
        else if(left != null) return left;
        else if(right != null) return right;
        return null;
    }
}
